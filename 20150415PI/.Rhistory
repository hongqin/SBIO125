require(flowCore);  require(flowClust); require(hexbin)
debug = 1;
facFlList = list.files( path="fcs/");  facFlList
#generate a dataframe
Row.Len = 5E3;
merged.FLX = data.frame( matrix(data=NA, nrow=Row.Len,ncol=1) )
names(merged.FLX) = c("tmp")
#for( i in 1:8) {
for (  i in 1: length(facFlList) ) {
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
#remove debris. pcp1D has much broad distribution and has to be done separately
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(0.55E2, Inf), "SSC-H"=c(5E2, Inf), "FL2-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
current.FLX = mydata$FL2.H   ### change here
# col.names(current.FL3) = facFlList[i]
merged.FLX = cbind( merged.FLX, current.FLX[1:Row.Len])  #20150417 add 1:Row.Len
oldnames = colnames( merged.FLX )
if ( length(oldnames>1)) {
newnames = c(oldnames[-length(oldnames)], facFlList[i])
colnames( merged.FLX ) = newnames
} else {
colnames( merged.FLX ) = facFlList[1]
}
} #i loop
merged.FLX = merged.FLX[,-1] ###2012 June 10, change
#boxplot
pdf( "batch-boxplot.pdf", width=10,height=11)
par(oma=c(2,12,2,2), las=1) #adjust margin for labels, 2012June10 add las=1
#par(mar=c(2,20,2,2), las=1) #adjust margin for labels
boxplot( as.data.frame(merged.FLX), horizontal=TRUE, main=getwd())
dev.off()
head(merged.FLX)
mean(merged.FLX)
mean(merged.FLX, na.rm=T)
apply(merged.FLX, 2, mean)
apply(merged.FLX, 2, function(x){mean(x,na.rm=T)} )
mu = apply(merged.FLX, 2, function(x){mean(x,na.rm=T)} )
order(mu)
sort(mu)
sort(round(mu, 1))
mu = sort(round(mu, 1))
mu
mu[grep("WT", names(mu))]
mu[grep("ec", names(mu))]
rm(list=ls())
require(flowCore);  require(flowClust); require(hexbin)
debug = 1;
facFlList = list.files( path="fcs/");  facFlList
facFlList = list.files( path="fcs.v2/");  facFlList
#generate a dataframe
Row.Len = 5E3;
merged.FLX = data.frame( matrix(data=NA, nrow=Row.Len,ncol=1) )
names(merged.FLX) = c("tmp")
#for( i in 1:8) {
for (  i in 1: length(facFlList) ) {
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
#remove debris. pcp1D has much broad distribution and has to be done separately
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(0.55E2, Inf), "SSC-H"=c(5E2, Inf), "FL2-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
current.FLX = mydata$FL2.H   ### change here
# col.names(current.FL3) = facFlList[i]
merged.FLX = cbind( merged.FLX, current.FLX[1:Row.Len])  #20150417 add 1:Row.Len
oldnames = colnames( merged.FLX )
if ( length(oldnames>1)) {
newnames = c(oldnames[-length(oldnames)], facFlList[i])
colnames( merged.FLX ) = newnames
} else {
colnames( merged.FLX ) = facFlList[1]
}
} #i loop
rm(list=ls())
require(flowCore);  require(flowClust); require(hexbin)
debug = 1;
facFlList = list.files( path="fcs/");  facFlList
facFlList = list.files( path="fcs.v2/");  facFlList
#generate a dataframe
Row.Len = 5E3;
merged.FLX = data.frame( matrix(data=NA, nrow=Row.Len,ncol=1) )
names(merged.FLX) = c("tmp")
#for( i in 1:8) {
for (  i in 1: length(facFlList) ) {
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
#remove debris. pcp1D has much broad distribution and has to be done separately
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(0.55E2, Inf), "SSC-H"=c(5E2, Inf), "FL2-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
current.FLX = mydata$FL2.H   ### change here
# col.names(current.FL3) = facFlList[i]
merged.FLX = cbind( merged.FLX, current.FLX[1:Row.Len])  #20150417 add 1:Row.Len
oldnames = colnames( merged.FLX )
if ( length(oldnames>1)) {
newnames = c(oldnames[-length(oldnames)], facFlList[i])
colnames( merged.FLX ) = newnames
} else {
colnames( merged.FLX ) = facFlList[1]
}
} #i loop
merged.FLX = merged.FLX[,-1] ###2012 June 10, change
#boxplot
pdf( "batch-boxplot.pdf", width=10,height=11)
par(oma=c(2,12,2,2), las=1) #adjust margin for labels, 2012June10 add las=1
#par(mar=c(2,20,2,2), las=1) #adjust margin for labels
boxplot( as.data.frame(merged.FLX), horizontal=TRUE, main=getwd())
dev.off()
1+1
13+98
13-5
20+8
4+5=8
9 == 4+5
x = 2
rm(list=ls())
require(flowCore);  require(flowClust); require(hexbin)
debug = 1;
facFlList = list.files( path="fcs/");  facFlList
#generate a dataframe
Row.Len = 5E3;
merged.FLX = data.frame( matrix(data=NA, nrow=Row.Len,ncol=1) )
names(merged.FLX) = c("tmp")
for( i in 1:8) {
#for (  i in 1: length(facFlList) ) {
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
#remove debris. pcp1D has much broad distribution and has to be done separately
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(0.55E2, Inf), "SSC-H"=c(5E2, Inf), "FL2-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
current.FLX = mydata$FL2.H   ### change here
# col.names(current.FL3) = facFlList[i]
merged.FLX = cbind( merged.FLX, current.FLX[1:Row.Len])  #20150417 add 1:Row.Len
oldnames = colnames( merged.FLX )
if ( length(oldnames>1))
jkhhj
}
""
}}}
rm(list=ls())
require(flowCore);  require(flowClust); require(hexbin)
debug = 1;
#facFlList = list.files( path="fcs/");  facFlList
facFlList = list.files( path="fcs.v2/");  facFlList
#generate a dataframe
Row.Len = 5E3;
merged.FLX = data.frame( matrix(data=NA, nrow=Row.Len,ncol=1) )
names(merged.FLX) = c("tmp")
#for( i in 1:8) {
for (  i in 1: length(facFlList) ) {
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
#remove debris. pcp1D has much broad distribution and has to be done separately
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(0.55E2, Inf), "SSC-H"=c(5E2, Inf), "FL2-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
current.FLX = mydata$FL2.H   ### change here
# col.names(current.FL3) = facFlList[i]
merged.FLX = cbind( merged.FLX, current.FLX[1:Row.Len])  #20150417 add 1:Row.Len
oldnames = colnames( merged.FLX )
if ( length(oldnames>1)) {
newnames = c(oldnames[-length(oldnames)], facFlList[i])
colnames( merged.FLX ) = newnames
} else {
colnames( merged.FLX ) = facFlList[1]
}
} #i loop
merged.FLX = merged.FLX[,-1] ###2012 June 10, change
#boxplot
pdf( "batch-boxplot_v2.pdf", width=10,height=11)
par(oma=c(2,12,2,2), las=1) #adjust margin for labels, 2012June10 add las=1
#par(mar=c(2,20,2,2), las=1) #adjust margin for labels
boxplot( as.data.frame(merged.FLX), horizontal=TRUE, main=getwd())
dev.off()
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust); require(flowViz)
#mydate = '20150417'
#mypatterns = c('BY', 'M5');
mypath='fcs.v2'
#mypath='2012JUNE25-BLANKS'
#mypath='2012JUNE25-DHE'
#mypath='2012JUNE25-DHR'
#myp = 'M5'
myp = ''
for( myp in mypatterns ) {
fs = read.flowSet(path=mypath, pattern=myp)
print(myp)
pData(phenoData(fs))
# xyplot(`SSC-H` ~ `FSC-H`, data=fs);
tf = transformList(from=colnames(fs), tfun=log10)
fs2 = tf %on% fs
rgate1 = rectangleGate('FSC-H'=c(2, 4), 'SSC-H'=c(2,4))
my.filter = filter(fs2, rgate1)
fs3 = Subset(fs2, my.filter)
print(fs3)
pdf(paste(mypath, myp, mydate, 'FSC-FL2scatter', 'pdf', sep='.'))
xyplot(`FSC` ~ `FL2-H`, data=fs3, filter=rgate1);
dev.off()
#             lab=c('0% glu', '0.01% glu', '0.1% glu', '0.2% glu', '0.25% glu', '0.5% glu', '1% glu', '2% glu'))
pData(phenoData(fs3))
fs3@phenoData@data$name = c('0% glu', '0.01% glu', '0.1% glu', '0.25% glu', '0.5% glu', '1% glu', '2% glu') #2012 July 11 change
pdf(paste(mypath, myp, mydate, 'FL1-3marginal', 'pdf', sep='.'), width=6, height=4)
#densityplot(~ `FL1-H`, data=fs3, filter=curv1Filter("FL1-H"))
#densityplot(~ ., fs3, channels=c("FL1-H", "FL3-H"), filter=list(curv1Filter("FL1-H"),  curv1Filter("FL3-H")))
densityplot(~ ., fs3, channels=c("FL1-H", "FL3-H"), filter=list(curv1Filter("FL1-H"),  curv1Filter("FL3-H")),
xlab=c('H2O2 signals','Superoxide signals'));
dev.off()
pdf(paste(mypath, myp, mydate, 'SSC-FSC', 'pdf', sep='.'));
xyplot(`SSC-H` ~ `FSC-H`, data=fs3, filter=rgate1);
dev.off()
}
#quit("no")
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust); require(flowViz)
#mydate = '20150417'
#mypatterns = c('BY', 'M5');
mypath='fcs.v2'
#mypath='2012JUNE25-BLANKS'
#mypath='2012JUNE25-DHE'
#mypath='2012JUNE25-DHR'
#myp = 'M5'
myp = ''
#for( myp in mypatterns ) {
fs = read.flowSet(path=mypath, pattern=myp)
print(myp)
pData(phenoData(fs))
# xyplot(`SSC-H` ~ `FSC-H`, data=fs);
tf = transformList(from=colnames(fs), tfun=log10)
fs2 = tf %on% fs
rgate1 = rectangleGate('FSC-H'=c(2, 4), 'SSC-H'=c(2,4))
my.filter = filter(fs2, rgate1)
fs3 = Subset(fs2, my.filter)
print(fs3)
pdf(paste(mypath, myp, mydate, 'FSC-FL2scatter', 'pdf', sep='.'))
xyplot(`FSC` ~ `FL2-H`, data=fs3, filter=rgate1);
dev.off()
#             lab=c('0% glu', '0.01% glu', '0.1% glu', '0.2% glu', '0.25% glu', '0.5% glu', '1% glu', '2% glu'))
pData(phenoData(fs3))
fs3@phenoData@data$name = c('0% glu', '0.01% glu', '0.1% glu', '0.25% glu', '0.5% glu', '1% glu', '2% glu') #2012 July 11 change
pdf(paste(mypath, myp, mydate, 'FL1-3marginal', 'pdf', sep='.'), width=6, height=4)
#densityplot(~ `FL1-H`, data=fs3, filter=curv1Filter("FL1-H"))
#densityplot(~ ., fs3, channels=c("FL1-H", "FL3-H"), filter=list(curv1Filter("FL1-H"),  curv1Filter("FL3-H")))
densityplot(~ ., fs3, channels=c("FL1-H", "FL3-H"), filter=list(curv1Filter("FL1-H"),  curv1Filter("FL3-H")),
xlab=c('H2O2 signals','Superoxide signals'));
dev.off()
pdf(paste(mypath, myp, mydate, 'SSC-FSC', 'pdf', sep='.'));
xyplot(`SSC-H` ~ `FSC-H`, data=fs3, filter=rgate1);
dev.off()
#}
#quit("no")
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust); require(flowViz)
#mydate = '20150417'
#mypatterns = c('BY', 'M5');
mypath='fcs.v2'
#mypath='2012JUNE25-BLANKS'
#mypath='2012JUNE25-DHE'
#mypath='2012JUNE25-DHR'
#myp = 'M5'
myp = ''
#for( myp in mypatterns ) {
fs = read.flowSet(path=mypath, pattern=myp)
print(myp)
pData(phenoData(fs))
# xyplot(`SSC-H` ~ `FSC-H`, data=fs);
tf = transformList(from=colnames(fs), tfun=log10)
fs2 = tf %on% fs
rgate1 = rectangleGate('FSC-H'=c(2, 4), 'SSC-H'=c(2,4))
my.filter = filter(fs2, rgate1)
fs3 = Subset(fs2, my.filter)
print(fs3)
# pdf(paste(mypath, myp, mydate, 'FSC-FL2scatter', 'pdf', sep='.'))
xyplot(`FSC` ~ `FL2-H`, data=fs3, filter=rgate1);
# dev.off()
#             lab=c('0% glu', '0.01% glu', '0.1% glu', '0.2% glu', '0.25% glu', '0.5% glu', '1% glu', '2% glu'))
pData(phenoData(fs3))
fs3@phenoData@data$name = c('0% glu', '0.01% glu', '0.1% glu', '0.25% glu', '0.5% glu', '1% glu', '2% glu') #2012 July 11 change
pdf(paste(mypath, myp, mydate, 'FL1-3marginal', 'pdf', sep='.'), width=6, height=4)
#densityplot(~ `FL1-H`, data=fs3, filter=curv1Filter("FL1-H"))
#densityplot(~ ., fs3, channels=c("FL1-H", "FL3-H"), filter=list(curv1Filter("FL1-H"),  curv1Filter("FL3-H")))
densityplot(~ ., fs3, channels=c("FL1-H", "FL3-H"), filter=list(curv1Filter("FL1-H"),  curv1Filter("FL3-H")),
xlab=c('H2O2 signals','Superoxide signals'));
dev.off()
#pdf(paste(mypath, myp, mydate, 'SSC-FSC', 'pdf', sep='.'));
xyplot(`SSC-H` ~ `FSC-H`, data=fs3, filter=rgate1);
#dev.off()
#}
#quit("no")
# pdf(paste(mypath, myp, mydate, 'FSC-FL2scatter', 'pdf', sep='.'))
xyplot(`FSC` ~ `FL2-H`, data=fs3, filter=rgate1);
# dev.off()
# pdf(paste(mypath, myp, mydate, 'FSC-FL2scatter', 'pdf', sep='.'))
xyplot(`FSC-H` ~ `FL2-H`, data=fs3, filter=rgate1);
# dev.off()
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust); require(flowViz)
mydate = ''
#mypatterns = c('BY', 'M5');
myp = ''
mypath='fcs.v2'
#for( myp in mypatterns ) {
fs = read.flowSet(path=mypath, pattern=myp)
print(myp)
pData(phenoData(fs))
# xyplot(`SSC-H` ~ `FSC-H`, data=fs);
tf = transformList(from=colnames(fs), tfun=log10)
fs2 = tf %on% fs
rgate1 = rectangleGate('FSC-H'=c(2, 4), 'SSC-H'=c(2,4))
my.filter = filter(fs2, rgate1)
fs3 = Subset(fs2, my.filter)
print(fs3)
pdf(paste(mypath, myp, mydate, 'FSC-FL3scatter', 'pdf', sep='.'))
xyplot(`FSC-H` ~ `FL2-H`, data=fs3, filter=rgate1);
dev.off()
pData(phenoData(fs3))
# fs3@phenoData@data$name = c('0% glu', '0.01% glu', '0.1% glu', '0.25% glu', '0.5% glu', '1% glu', '2% glu') #2012 July 11 change
pdf(paste(mypath, myp, mydate, 'FL1-3marginal', 'pdf', sep='.'), width=6, height=4)
densityplot(~ `FL1-H`, data=fs3, filter=curv1Filter("FL1-H"))
#densityplot(~ ., fs3, channels=c("FL1-H", "FL3-H"), filter=list(curv1Filter("FL1-H"),  curv1Filter("FL3-H")))
#densityplot(~ ., fs3, channels=c("FL1-H", "FL3-H"), filter=list(curv1Filter("FL1-H"),  curv1Filter("FL3-H")),
#             xlab=c('H2O2 signals','Superoxide signals'));
densityplot(~ "FL1-H", fs3,  filter=curv1Filter("FL1-H") )
dev.off()
pdf(paste(mypath, myp, mydate, 'SSC-FSC', 'pdf', sep='.'));
xyplot(`SSC-H` ~ `FSC-H`, data=fs3, filter=rgate1);
dev.off()
#}
#quit("no")
densityplot(~ `FL1-H`, data=fs3, filter=curv1Filter("FL1-H"))
#densityplot(~ ., fs3, channels=c("FL1-H", "FL3-H"), filter=list(curv1Filter("FL1-H"),  curv1Filter("FL3-H")))
densityplot(~ "FL1-H", fs3,  filter=curv1Filter("FL1-H") )
densityplot(~ `FL2-H`, data=fs3, filter=curv1Filter("FL2-H"))
densityplot(~ "FL2-H", data=fs3, filter=curv1Filter("FL2-H"))
densityplot(~ "FL2-H", fs3,  filter=curv1Filter("FL2-H") )
densityplot(~ `FL2-H`, data=fs3, filter=curv1Filter("FL2-H"))
densityplot(~ 'FL2-H', data=fs3, filter=curv1Filter("FL2-H"))
densityplot(~ `FL2-H`, data=fs3, filter=curv1Filter("FL2-H"))
densityplot(~ ., fs3, channels=c("FL1-H", "FL2-H"),
filter=list(curv1Filter("FL1-H"), curv1Filter("FL2-H")))
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust); require(flowViz)
mydate = ''
#mypatterns = c('BY', 'M5');
myp = ''
mypath='fcs.v2'
#for( myp in mypatterns ) {
fs = read.flowSet(path=mypath, pattern=myp)
print(myp)
pData(phenoData(fs))
# xyplot(`SSC-H` ~ `FSC-H`, data=fs);
tf = transformList(from=colnames(fs), tfun=log10)
fs2 = tf %on% fs
rgate1 = rectangleGate('FSC-H'=c(2, 4), 'SSC-H'=c(2,4))
my.filter = filter(fs2, rgate1)
fs3 = Subset(fs2, my.filter)
print(fs3)
pdf(paste(mypath, myp, mydate, 'FSC-FL3scatter', 'pdf', sep='.'))
xyplot(`FSC-H` ~ `FL2-H`, data=fs3, filter=rgate1);
dev.off()
pData(phenoData(fs3))
# fs3@phenoData@data$name = c('0% glu', '0.01% glu', '0.1% glu', '0.25% glu', '0.5% glu', '1% glu', '2% glu') #2012 July 11 change
pdf(paste(mypath, myp, mydate, 'FL2Marginal', 'pdf', sep='.'), width=6, height=4)
densityplot(~ `FL2-H`, data=fs3, filter=curv1Filter("FL2-H"))
densityplot(~ ., fs3, channels=c("FL1-H", "FL2-H"),
filter=list(curv1Filter("FL1-H"), curv1Filter("FL2-H")))
# densityplot(~ ., fs3, channels=c("FL1-H", "FL3-H"), filter=list(curv1Filter("FL1-H"),  curv1Filter("FL3-H")))
#densityplot(~ ., fs3, channels=c("FL1-H", "FL3-H"), filter=list(curv1Filter("FL1-H"),  curv1Filter("FL3-H")),
#             xlab=c('H2O2 signals','Superoxide signals'));
dev.off()
pdf(paste(mypath, myp, mydate, 'SSC-FSC', 'pdf', sep='.'));
xyplot(`SSC-H` ~ `FSC-H`, data=fs3, filter=rgate1);
dev.off()
#}
#quit("no")
densityplot(~ ., fs3, channels=c("FL1-H"),
filter=list( curv1Filter("FL2-H")))
densityplot(~ ., fs3, channels=c("FL2-H"),
filter=list( curv1Filter("FL2-H")))
dev.off()
densityplot(~ ., fs3, channels=c("FL2-H"),
filter=list( curv1Filter("FL2-H")))
densityplot(~ ., fs3, channels=c("FL1-H", "FL2-H"),
filter=list(curv1Filter("FL1-H"), curv1Filter("FL2-H")))
densityplot(~ ., fs3, channels=c("FL2-H"),
filter= curv1Filter("FL2-H") )
densityplot(~ ., fs3, channels=c("FL2-H", "FL3-H"),
filter=list(curv1Filter("FL2-H"), curv1Filter("FL3-H")))
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust); require(flowViz)
mydate = ''
#mypatterns = c('BY', 'M5');
myp = ''
mypath='fcs.v2'
#for( myp in mypatterns ) {
fs = read.flowSet(path=mypath, pattern=myp)
print(myp)
pData(phenoData(fs))
# xyplot(`SSC-H` ~ `FSC-H`, data=fs);
tf = transformList(from=colnames(fs), tfun=log10)
fs2 = tf %on% fs
rgate1 = rectangleGate('FSC-H'=c(2, 4), 'SSC-H'=c(2,4))
my.filter = filter(fs2, rgate1)
fs3 = Subset(fs2, my.filter)
print(fs3)
pdf(paste(mypath, myp, mydate, 'FSC-FL3scatter', 'pdf', sep='.'))
xyplot(`FSC-H` ~ `FL2-H`, data=fs3, filter=rgate1);
dev.off()
pData(phenoData(fs3))
# fs3@phenoData@data$name = c('0% glu', '0.01% glu', '0.1% glu', '0.25% glu', '0.5% glu', '1% glu', '2% glu') #2012 July 11 change
pdf(paste(mypath, myp, mydate, 'FL2Marginal', 'pdf', sep='.'), width=6, height=4)
#densityplot(~ `FL2-H`, data=fs3, filter=curv1Filter("FL2-H"))
densityplot(~ ., fs3, channels=c("FL2-H"),
filter= curv1Filter("FL2-H") )
densityplot(~ ., fs3, channels=c("FL2-H", "FL3-H"),
filter=list(curv1Filter("FL2-H"), curv1Filter("FL3-H")))
dev.off()
#pdf(paste(mypath, myp, mydate, 'SSC-FSC', 'pdf', sep='.'));
#xyplot(`SSC-H` ~ `FSC-H`, data=fs3, filter=rgate1);
#dev.off()
#}
#quit("no")
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust); require(flowViz)
mydate = ''
#mypatterns = c('BY', 'M5');
myp = ''
mypath='fcs.v2'
#for( myp in mypatterns ) {
fs = read.flowSet(path=mypath, pattern=myp)
print(myp)
pData(phenoData(fs))
# xyplot(`SSC-H` ~ `FSC-H`, data=fs);
tf = transformList(from=colnames(fs), tfun=log10)
fs2 = tf %on% fs
rgate1 = rectangleGate('FSC-H'=c(2, 4), 'SSC-H'=c(2,4))
my.filter = filter(fs2, rgate1)
fs3 = Subset(fs2, my.filter)
print(fs3)
pdf(paste(mypath, myp, mydate, 'FSC-FL3scatter', 'pdf', sep='.'))
xyplot(`FSC-H` ~ `FL2-H`, data=fs3, filter=rgate1);
dev.off()
pData(phenoData(fs3))
# fs3@phenoData@data$name = c('0% glu', '0.01% glu', '0.1% glu', '0.25% glu', '0.5% glu', '1% glu', '2% glu') #2012 July 11 change
pdf(paste(mypath, myp, mydate, 'FL2Marginal', 'pdf', sep='.'), width=6, height=4)
#densityplot(~ `FL2-H`, data=fs3, filter=curv1Filter("FL2-H"))
densityplot(~ ., fs3, channels=c("FL2-H"),
filter= curv1Filter("FL2-H") )
densityplot(~ ., fs3, channels=c("FL2-H", "FL3-H"),
filter=list(curv1Filter("FL2-H"), curv1Filter("FL3-H")))
dev.off()
#pdf(paste(mypath, myp, mydate, 'SSC-FSC', 'pdf', sep='.'));
#xyplot(`SSC-H` ~ `FSC-H`, data=fs3, filter=rgate1);
#dev.off()
#}
#quit("no")
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust); require(flowViz)
mydate = ''
#mypatterns = c('BY', 'M5');
myp = ''
mypath='fcs.v2'
#for( myp in mypatterns ) {
fs = read.flowSet(path=mypath, pattern=myp)
print(myp)
pData(phenoData(fs))
# xyplot(`SSC-H` ~ `FSC-H`, data=fs);
tf = transformList(from=colnames(fs), tfun=log10)
fs2 = tf %on% fs
rgate1 = rectangleGate('FSC-H'=c(2, 4), 'SSC-H'=c(2,4))
my.filter = filter(fs2, rgate1)
fs3 = Subset(fs2, my.filter)
print(fs3)
pdf(paste(mypath, myp, mydate, 'FSC-FL3scatter', 'pdf', sep='.'))
xyplot(`FSC-H` ~ `FL2-H`, data=fs3, filter=rgate1);
dev.off()
pData(phenoData(fs3))
# fs3@phenoData@data$name = c('0% glu', '0.01% glu', '0.1% glu', '0.25% glu', '0.5% glu', '1% glu', '2% glu') #2012 July 11 change
pdf(paste(mypath, myp, mydate, 'FL2Marginal', 'pdf', sep='.'), width=6, height=4)
#densityplot(~ `FL2-H`, data=fs3, filter=curv1Filter("FL2-H"))
densityplot(~ ., fs3, channels=c("FL2-H"),
filter= curv1Filter("FL2-H") )
densityplot(~ ., fs3, channels=c("FL2-H", "FL3-H"),
filter=list(curv1Filter("FL2-H"), curv1Filter("FL3-H")))
#            dev.off()
#pdf(paste(mypath, myp, mydate, 'SSC-FSC', 'pdf', sep='.'));
xyplot(`SSC-H` ~ `FSC-H`, data=fs3, filter=rgate1);
dev.off()
#}
#quit("no")
?read.flowset
help(read.flowset)
help(read.flowSet)
